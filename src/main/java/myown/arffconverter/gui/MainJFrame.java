/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package myown.arffconverter.gui;

import com.opencsv.CSVReader;
import java.awt.Color;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import weka.core.Instances;
import weka.core.converters.ArffSaver;
import weka.core.converters.CSVLoader;
import weka.core.converters.MatlabLoader;

/**
 *
 * @author Saul
 */
public class MainJFrame extends javax.swing.JFrame {

    private String sourcePath;
    private String outputPath;

    /**
     * Creates new form MainJFrame
     */
    public MainJFrame() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollBar1 = new javax.swing.JScrollBar();
        inputOutputjPanel = new javax.swing.JPanel();
        dataSourcejButton = new javax.swing.JButton();
        outputDirjButton = new javax.swing.JButton();
        outputDirjTextField = new javax.swing.JTextField();
        dataSourcejTextField = new javax.swing.JTextField();
        optionsjPanel = new javax.swing.JPanel();
        separatorjPanel = new javax.swing.JPanel();
        comajCheckBox = new javax.swing.JCheckBox();
        otherjCheckBox = new javax.swing.JCheckBox();
        tabjCheckBox = new javax.swing.JCheckBox();
        semicolonjCheckBox = new javax.swing.JCheckBox();
        spacejCheckBox = new javax.swing.JCheckBox();
        otherjTextField = new javax.swing.JTextField();
        outputFormatjPanel = new javax.swing.JPanel();
        outputFormatjComboBox = new javax.swing.JComboBox();
        outputFormatjLabel = new javax.swing.JLabel();
        runjPanel = new javax.swing.JPanel();
        startjButton = new javax.swing.JButton();
        jProgressBar = new javax.swing.JProgressBar();
        jMenuBar1 = new javax.swing.JMenuBar();
        filejMenu = new javax.swing.JMenu();
        closejMenuItem = new javax.swing.JMenuItem();
        helpjMenu = new javax.swing.JMenu();
        aboutjMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Data Converter");
        setResizable(false);

        inputOutputjPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Input/Output Data"));

        dataSourcejButton.setText("Dataset/s source file / dir");
        dataSourcejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataSourcejButtonActionPerformed(evt);
            }
        });

        outputDirjButton.setText("Dataset/s output directory");
        outputDirjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outputDirjButtonActionPerformed(evt);
            }
        });

        outputDirjTextField.setText(System.getProperty("user.home"));

        javax.swing.GroupLayout inputOutputjPanelLayout = new javax.swing.GroupLayout(inputOutputjPanel);
        inputOutputjPanel.setLayout(inputOutputjPanelLayout);
        inputOutputjPanelLayout.setHorizontalGroup(
            inputOutputjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputOutputjPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(inputOutputjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(outputDirjButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dataSourcejButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(inputOutputjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(outputDirjTextField)
                    .addComponent(dataSourcejTextField, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        inputOutputjPanelLayout.setVerticalGroup(
            inputOutputjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputOutputjPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(inputOutputjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dataSourcejButton)
                    .addComponent(dataSourcejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(inputOutputjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outputDirjButton)
                    .addComponent(outputDirjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        optionsjPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Options"));

        separatorjPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Separators"));

        comajCheckBox.setSelected(true);
        comajCheckBox.setText("Coma");

        otherjCheckBox.setText("Other:");
        otherjCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                otherjCheckBoxActionPerformed(evt);
            }
        });

        tabjCheckBox.setText("Tab");

        semicolonjCheckBox.setText("Semicolon");

        spacejCheckBox.setText("Space");

        otherjTextField.setEnabled(false);

        javax.swing.GroupLayout separatorjPanelLayout = new javax.swing.GroupLayout(separatorjPanel);
        separatorjPanel.setLayout(separatorjPanelLayout);
        separatorjPanelLayout.setHorizontalGroup(
            separatorjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(separatorjPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(comajCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tabjCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(semicolonjCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spacejCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(otherjCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(otherjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        separatorjPanelLayout.setVerticalGroup(
            separatorjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, separatorjPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(separatorjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comajCheckBox)
                    .addComponent(otherjCheckBox)
                    .addComponent(tabjCheckBox)
                    .addComponent(semicolonjCheckBox)
                    .addComponent(spacejCheckBox)
                    .addComponent(otherjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        outputFormatjPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Output otions"));

        outputFormatjComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ARFF", "DataSet" }));

        outputFormatjLabel.setText("Output format");

        javax.swing.GroupLayout outputFormatjPanelLayout = new javax.swing.GroupLayout(outputFormatjPanel);
        outputFormatjPanel.setLayout(outputFormatjPanelLayout);
        outputFormatjPanelLayout.setHorizontalGroup(
            outputFormatjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, outputFormatjPanelLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(outputFormatjLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(outputFormatjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );
        outputFormatjPanelLayout.setVerticalGroup(
            outputFormatjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, outputFormatjPanelLayout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addGroup(outputFormatjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outputFormatjLabel)
                    .addComponent(outputFormatjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13))
        );

        javax.swing.GroupLayout optionsjPanelLayout = new javax.swing.GroupLayout(optionsjPanel);
        optionsjPanel.setLayout(optionsjPanelLayout);
        optionsjPanelLayout.setHorizontalGroup(
            optionsjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(optionsjPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(separatorjPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(outputFormatjPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        optionsjPanelLayout.setVerticalGroup(
            optionsjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(optionsjPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(optionsjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(separatorjPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(outputFormatjPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        runjPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        startjButton.setText("Start");
        startjButton.setEnabled(false);
        startjButton.setSelected(true);
        startjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startjButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout runjPanelLayout = new javax.swing.GroupLayout(runjPanel);
        runjPanel.setLayout(runjPanelLayout);
        runjPanelLayout.setHorizontalGroup(
            runjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(runjPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(startjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        runjPanelLayout.setVerticalGroup(
            runjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, runjPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(runjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(startjButton, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jProgressBar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        filejMenu.setText("File");

        closejMenuItem.setText("Close");
        closejMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closejMenuItemActionPerformed(evt);
            }
        });
        filejMenu.add(closejMenuItem);

        jMenuBar1.add(filejMenu);

        helpjMenu.setText("Help");

        aboutjMenuItem.setText("About");
        aboutjMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutjMenuItemActionPerformed(evt);
            }
        });
        helpjMenu.add(aboutjMenuItem);

        jMenuBar1.add(helpjMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(optionsjPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(inputOutputjPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(runjPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(inputOutputjPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(optionsjPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(runjPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startjButtonActionPerformed

        try {
            runProcess();
        } catch (IOException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_startjButtonActionPerformed

    private void closejMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closejMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_closejMenuItemActionPerformed

    private void aboutjMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutjMenuItemActionPerformed
        JAcercaDDialog acercaDDialog = new JAcercaDDialog();
        acercaDDialog.setVisible(true);
    }//GEN-LAST:event_aboutjMenuItemActionPerformed

    private void runProcess() throws FileNotFoundException, IOException {
        File folderFile = new File(sourcePath);
        Instances instances;
        if (!folderFile.isFile()) {
            File[] listOfFiles = folderFile.listFiles();

            for (File currentFile : listOfFiles) {
                if (currentFile.isFile()) {
                    System.out.println("File " + currentFile.getName());
                    instances = getInstances(currentFile);
                    if (instances != null) {
                        writeInstances(instances, currentFile.getName());
                    }

                } else if (currentFile.isDirectory()) {
                    System.out.println("Directory " + currentFile.getName());
                }
            }
        } else {
            System.out.println("File " + folderFile.getName());
            instances = getInstances(folderFile);
            writeInstances(instances, folderFile.getName());
        }
    }

    private void writeInstances(Instances instances, String name) throws IOException {
        ArffSaver saver = new ArffSaver();
        instances.setClassIndex(instances.numAttributes() - 1);
        saver.setInstances(instances);
        saver.setFile(new File(outputPath + File.separator + name + ".arff"));
        saver.writeBatch();
    }

    Instances getInstances(File file) throws IOException {
        Instances instances = null;
        if (isMatlab(file.getName())) {
            MatlabLoader matlabLoader = new MatlabLoader();
            matlabLoader.setFile(file);
            matlabLoader.getDataSet();
        } else {
            CSVLoader csvloader = new CSVLoader();
            csvloader.setFile(file);
            ArrayList<String> separator = getSeparator();
            for (String get : separator) {
                csvloader.setFieldSeparator(get);
                instances = csvloader.getDataSet();
                if (instances.get(0).toDoubleArray().length != 1) {
                    break;
                }
            }
        }

        return instances;
    }

    private void dataSourcejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dataSourcejButtonActionPerformed
//        File file = SwingUtils.getFile("csv", ".*");
        JFileChooser jfch = new JFileChooser();
        jfch.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        if (jfch.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            if (!outputDirjTextField.getText().isEmpty()) {
                startjButton.setEnabled(true);
            }

            dataSourcejTextField.setText(jfch.getSelectedFile().getPath());
            sourcePath = dataSourcejTextField.getText();
        }
    }//GEN-LAST:event_dataSourcejButtonActionPerformed

    private void outputDirjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outputDirjButtonActionPerformed
        JFileChooser jfch = new JFileChooser();
        jfch.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        if (jfch.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            outputDirjTextField.setText(jfch.getSelectedFile().getPath());
            outputPath = outputDirjTextField.getText();
        }
    }//GEN-LAST:event_outputDirjButtonActionPerformed

    private void otherjCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_otherjCheckBoxActionPerformed
        if (otherjCheckBox.isSelected()) {
            otherjTextField.setEnabled(true);
        } else {
            otherjTextField.setEnabled(false);
        }

    }//GEN-LAST:event_otherjCheckBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }

    public static boolean isMatlab(String location) {
        return location.toLowerCase().endsWith("m".toLowerCase());
    }

    private ArrayList<String> getSeparator() {
        ArrayList<String> separatorList = new ArrayList<>();
        if (comajCheckBox.isSelected()) {
            separatorList.add(",");
        }
        if (semicolonjCheckBox.isSelected()) {
            separatorList.add(";");
        }
        if (tabjCheckBox.isSelected()) {
            separatorList.add("\\t");
        }
        if (spacejCheckBox.isSelected()) {
            separatorList.add(" ");
        }
        if (otherjCheckBox.isSelected()) {
            separatorList.add(otherjTextField.getText());
        }

        return separatorList;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutjMenuItem;
    private javax.swing.JMenuItem closejMenuItem;
    private javax.swing.JCheckBox comajCheckBox;
    private javax.swing.JButton dataSourcejButton;
    private javax.swing.JTextField dataSourcejTextField;
    private javax.swing.JMenu filejMenu;
    private javax.swing.JMenu helpjMenu;
    private javax.swing.JPanel inputOutputjPanel;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JProgressBar jProgressBar;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JPanel optionsjPanel;
    private javax.swing.JCheckBox otherjCheckBox;
    private javax.swing.JTextField otherjTextField;
    private javax.swing.JButton outputDirjButton;
    private javax.swing.JTextField outputDirjTextField;
    private javax.swing.JComboBox outputFormatjComboBox;
    private javax.swing.JLabel outputFormatjLabel;
    private javax.swing.JPanel outputFormatjPanel;
    private javax.swing.JPanel runjPanel;
    private javax.swing.JCheckBox semicolonjCheckBox;
    private javax.swing.JPanel separatorjPanel;
    private javax.swing.JCheckBox spacejCheckBox;
    private javax.swing.JButton startjButton;
    private javax.swing.JCheckBox tabjCheckBox;
    // End of variables declaration//GEN-END:variables
}
